
const API_URL = 'http://localhost:3000/api/owner/manageMenu';

function checkFileSize(input) {
    if (input.files[0] && input.files[0].size > 5 * 1024 * 1024) { // 5MB
        alert("‚ùå ‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏ç‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ! ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏ó‡∏µ‡πà 5MB");
        input.value = "";
    }
}


async function fetchMenu() {
    try {
        const res = await fetch(API_URL);
        if (!res.ok) throw new Error('Failed to fetch menu');

        const menus = await res.json();
        console.log("üìå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å API:", menus); // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö

        if (!Array.isArray(menus) || menus.length === 0) {
            console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡πÇ‡∏´‡∏•‡∏î‡∏°‡∏≤");
            return;
        }

        let menuList = '';
        menus.forEach((menu) => {
            menuList += `
                <tr>
                    <td>${menu.menu_id}</td>
                    <td><img src="http://localhost:3000/uploads/food/${menu.menu_image}" width="80"></td>
                    <td>${menu.menu_name}</td>
                    <td>${menu.price} ‡∏ø</td>
                    <td>${menu.special ? "‚úÖ ‡πÉ‡∏ä‡πà" : "‚ùå ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"}</td>
                    <td>${menu.type_name ? menu.type_name : "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó"}</td>
                    <td>${menu.detail_menu}</td>
                    <td>
                        <button class="btn btn-warning btn-sm" onclick="editMenu(${menu.menu_id})">‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</button>
                        <button class="btn btn-danger btn-sm" onclick="deleteMenu(${menu.menu_id})">üóëÔ∏è ‡∏•‡∏ö</button>
                    </td>
                </tr>
            `;
        });
        document.getElementById('menu-list').innerHTML = menuList;
    } catch (error) {
        console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error);
    }
}



function openAddModal() {
    document.getElementById('modalTitle').innerText = "‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π";
    document.getElementById('modal_menu_id').value = "";
    document.getElementById('modal_menu_name').value = "";
    document.getElementById('modal_price').value = "";
    document.getElementById("modal_special").checked = false;
    document.getElementById('modal_menu_type').value = "";
    document.getElementById('modal_detail_menu').value = "";
    document.getElementById('modal_menu_image').value = "";
    document.getElementById('menu_image_display').innerHTML = ""; // ‡∏•‡πâ‡∏≤‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏Å‡πà‡∏≤

    new bootstrap.Modal(document.getElementById('menuModal')).show();
}

async function saveMenu() {
    const menu_id = document.getElementById('modal_menu_id').value;
    const menu_name = document.getElementById('modal_menu_name').value;
    const menu_image = document.getElementById('modal_menu_image').files[0]; // ‡πÄ‡∏ä‡πá‡∏Ñ‡πÉ‡∏´‡πâ‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏£‡∏¥‡∏á
    const price = document.getElementById('modal_price').value;
    const special = document.getElementById('modal_special').checked ? 1 : 0;
    const menu_type = document.getElementById('modal_menu_type').value;
    const detail_menu = document.getElementById('modal_detail_menu').value;

    const oldImage = document.getElementById('menu_image_display').getAttribute('data-old-image') || "";

    const formData = new FormData();
    formData.append('menu_name', menu_name);
    if (menu_image) formData.append('menu_image', menu_image);
    formData.append('price', price);
    formData.append('special', special);
    formData.append('menu_type_id', menu_type); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å 'menu_type' ‡πÄ‡∏õ‡πá‡∏ô 'menu_type_id'
    formData.append('detail_menu', detail_menu);
    formData.append('oldImage', oldImage);

    try {
        let res;
        if (menu_id) { // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
            res = await fetch(`${API_URL}/${menu_id}`, {
                method: 'PUT',
                body: formData
            });
        } else { // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
            res = await fetch(API_URL, {
                method: 'POST',
                body: formData
            });
        }

        if (!res.ok) throw new Error('Save failed');

        await fetchMenu(); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô fetchMenu()

        // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô modal
        document.getElementById('menu_image_display').innerHTML = "";
        bootstrap.Modal.getInstance(document.getElementById('menuModal')).hide();
        
    } catch (error) {
        console.error(error);
    }
}

async function editMenu(id) {
    console.log("üîç ID ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤:", id);
    try {
        const res = await fetch(`${API_URL}/${id}`);
        if (!res.ok) throw new Error('Failed to fetch menu data');

        const menu = await res.json();
        console.log("‚úÖ ‡πÑ‡∏î‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏ô‡∏π:", menu);

        document.getElementById('modalTitle').innerText = "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏°‡∏ô‡∏π";
        document.getElementById('modal_menu_id').value = menu.menu_id;
        document.getElementById('modal_menu_name').value = menu.menu_name;
        document.getElementById('modal_price').value = menu.price;
        document.getElementById("modal_special").checked = menu.special == 1;
        document.getElementById('modal_menu_type').value = menu.menu_type_id; // ‡πÉ‡∏ä‡πâ menu_type_id
        document.getElementById('modal_detail_menu').value = menu.detail_menu;

        const imageDisplay = document.getElementById('menu_image_display');
        imageDisplay.innerHTML = ""; // ‡∏•‡∏ö‡∏£‡∏π‡∏õ‡πÄ‡∏Å‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡πÉ‡∏´‡∏°‡πà

        if (menu.menu_image && menu.menu_image !== "null") {
            imageDisplay.innerHTML = `<img src="http://localhost:3000/uploads/food/${menu.menu_image}" width="100">`;
            imageDisplay.setAttribute('data-old-image', menu.menu_image);
        } else {
            imageDisplay.innerText = "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û";
            imageDisplay.removeAttribute('data-old-image');
        }

        new bootstrap.Modal(document.getElementById('menuModal')).show();
    } catch (error) {
        console.error(error);
    }
}


async function deleteMenu(id) {
    if (!confirm("‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?")) return;

    try {
        const res = await fetch(`${API_URL}/${id}`, { method: "DELETE" });
        if (!res.ok) throw new Error('Delete failed');
        await fetchMenu();
        // ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏•‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
        window.location.reload();
    } catch (error) {
        console.error(error);
    }
}


document.getElementById("menu-form").addEventListener("submit", async function (event) {
    event.preventDefault();

    const formData = new FormData(this);

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ menu_type_id ‡πÄ‡∏õ‡πá‡∏ô array ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ‡∏ñ‡πâ‡∏≤‡πÉ‡∏ä‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤‡πÅ‡∏£‡∏Å
    const menuTypeId = Array.isArray(formData.get("menu_type_id")) ? formData.get("menu_type_id")[0] : formData.get("menu_type_id");
    
    formData.set("menu_type_id", menuTypeId); // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ menu_type_id ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß

    try {
        const res = await fetch(API_URL, { method: 'POST', body: formData });

        if (!res.ok) throw new Error('Save failed');

        alert('‚úÖ ‡πÄ‡∏°‡∏ô‡∏π‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!');
        window.location.href = "/owner/manageMenu";
    } catch (error) {
        console.error("‚ùå Error:", error);
    }
});




async function fetchAddCategories() {
    try {
        const API_URL = `http://localhost:3000/api/owner/category`; 
        console.log("üåê ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API:", API_URL);

        const res = await fetch(API_URL);
        if (!res.ok) throw new Error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÑ‡∏î‡πâ');

        const categories = await res.json();
        console.log("üìå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å API:", categories);

        // üõë ‡∏ñ‡πâ‡∏≤ API ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        if (!categories.data || categories.data.length === 0) {
            console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà");
            return;
        }

        let categoryOptions = '<option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</option>';
        categories.data.forEach((category) => {
            categoryOptions += `<option value="${category.menu_type_id}">${category.type_name}</option>`;
        });

        console.log("üìå HTML ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏ï‡∏¥‡∏°‡πÉ‡∏ô <select>:", categoryOptions);
        
        document.getElementById('menu_type').innerHTML = categoryOptions;
    } catch (error) {
        console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:", error);
    }
}
async function fetchCategories() {
    try {
        const API_URL = `http://localhost:3000/api/owner/category`; 
        console.log("üåê ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API:", API_URL);

        const res = await fetch(API_URL);
        if (!res.ok) throw new Error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÑ‡∏î‡πâ');

        const categories = await res.json();
        console.log("üìå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å API:", categories);

        // üõë ‡∏ñ‡πâ‡∏≤ API ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        if (!categories.data || categories.data.length === 0) {
            console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà");
            return;
        }

        let categoryOptions = '<option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</option>'; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å default
        categories.data.forEach((category) => {
            categoryOptions += `<option value="${category.menu_type_id}">${category.type_name}</option>`;
        });

        console.log("üìå HTML ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏ï‡∏¥‡∏°‡πÉ‡∏ô <select>:", categoryOptions);
        
        document.getElementById('modal_menu_type').innerHTML = categoryOptions; // ‡πÄ‡∏ï‡∏¥‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏•‡∏á‡πÉ‡∏ô select
    } catch (error) {
        console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:", error);
    }
}

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
fetchCategories();
fetchAddCategories();


// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å <select>
function getSelectedCategory() {
    const selectedCategory = document.getElementById('menu_type').value;
    console.log("üìå ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:", selectedCategory);

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ñ‡πâ‡∏≤‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô null ‡∏´‡∏£‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏á
    if (!selectedCategory) {
        console.warn("‚ö†Ô∏è ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà");
    } else {
        console.log("‚úÖ ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô:", selectedCategory);
    }
}

// ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å `fetchCategories()` ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÇ‡∏´‡∏•‡∏î DOM ‡πÄ‡∏™‡∏£‡πá‡∏à
document.addEventListener("DOMContentLoaded", function() {
    fetchCategories();
});


function previewImage(event) {
    const input = event.target;
    const preview = document.getElementById('menu_image_display');
    
    preview.innerHTML = ""; // ‡∏•‡πâ‡∏≤‡∏á‡∏£‡∏π‡∏õ‡πÄ‡∏î‡∏¥‡∏°

    if (input.files && input.files[0]) {
        const reader = new FileReader();
        reader.onload = function(e) {
            const img = document.createElement("img");
            img.src = e.target.result;
            img.style.width = "100px";
            preview.appendChild(img);
        };
        reader.readAsDataURL(input.files[0]);
    }
}

fetchMenu();
